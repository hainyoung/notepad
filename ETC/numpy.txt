* 딥러닝 기초 : 파이썬 넘파이(numpy)기본 사용법
어떤 딥러닝 책을 보더라도 배열이나 행렬 계산이 많이 등장한다.
numpy의 배열 class인 numpy.arrray에는 편리한 함수가 많이 준비되어 있어서 
D.L을 구현할 때 많이 이용

1. numpy 가져오기
numpy는 외부 library이기 때문에 numpy를 사용할 수 있게 import 해야 한다.
여기서 as np는 numpy의 별칭을 np로 두겠다는 의미.
즉, numpy를 하지 않고 numpy가 제공하는 함수를 np를 통해 참조할 수 있게 된다.

2. 배열 생성하기
numpy 배열을 만들 때는 np.array() method(메서드)를 이용.
이 함수는 python의 list를 인수로 받아서 numpy가 제공하는 특수한 형태의 배열을 반환
(쉽게, 기계에게 인식하기 쉽게, 좋게 만들어준다고 생각해도 됨)

3. 산술 연산
numpy 배열로 산술 연산을 할 수 있음

import numpy as np
 
x= np.array([1, 2, 3, 4, 5])
y = np.array([6, 7, 8, 9 ,10])

print(x)
print(y)

print(x+y)
print(x*y)
print(x-y)

[1 2 3 4 5]
[6 7 8 9 10]

[7 9 11 13 15]
[6 14 24 36 50]
[-5 -5 -5 -5 -5]

4. 위의 예시는 1차원 배열인데 numpy에서는 다차원 배열도 작성할 수 있음

import numpy as np

x = np.array([1, 2, 3, 4, 5], [6, 7, 8, 9, 10])
y = np.array([2, 2, 2, 2, ,2], [4, 4, 4, 4, 4])

print(x.shape)

[[1 2 3 4 5]
[6 7 8 9 10]]
[[2 2 2 2 2]
[4 4 4 4 4]]

(2, 5)

shape 함수는 각 배열의 차원의 크기(2, 5 즉, 2행 5열을 반환해준다.
(print(x), print(y)는 생략)

- 수학에서 1차원 배열은 벡터(Vector), 2차원 배열은 행렬(Matrix)라고 함.
- 그리고 Vector와 행렬을 일반화한 것을 텐서(Tensor)라고 함.

























