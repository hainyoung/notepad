# 생활코딩
# DATABASE 1

# 1-1
정보기술의 심장 : 데이터베이스
데이터가 중요한 이유
이 데이터를 가공해서 다양한 일을 할 수 있기 때문
인터넷과 연결된 웹과 앱을 통해 소식과지식을 전파 가능
빅데이터 인공지능 기술 이용해서 대규모의 데이터로부터
통찰력 있는 분석결과를 뽑아낼 수 있다

이런 일을 하기 위해 데이터를 저장하고 꺼낼 수 있어야 한다

우리가 선택할 수 있는 첫 번째 수단 : 파일
장점 모두 열거하기 힘듦
배우기 쉽고 운영체제마다 파일 기능을 제공하기 때문에 어디에서든 사용가능
이메일, 메신저를 통해서 간편하게 전송할 수도 있다

그러나
파일이 만능은 아니다
성능이나 보안, 편의성에 한계를 가지고 있다
파일의 한계를 극복, 보완하기 위해
전문화된 소프트웨어 : 데이터베이스

데이터베이스를 이용하면 소중한 데이터를
안전하고 편리하고 빠르게 보관하고 사용할 수 있다
다양한 데이터베이스 제품들이 존재
mysql oracle sqlserver postgressql mongodb

# 1-2
데이터베이스의 본질
input, output
어떻게 입력하고 어떻게 출력하는지 따져야 한다
데이터베이스의 반을 한다고 해도 과언이 아님

input은 3가지 작업으로 쪼개진다
create, update, delete (생성, 수정, 삭제)
output : read(읽음)

데이터베이스의 가장 핵심적인 작업
-> CRUD(생성하고 읽고 수정, 삭제)

# 1-3
spreadsheet : database의 특성을 어느 정도 가지고는 있음

file > spreadsheet > database

# 1-4
- 어떤 데이터베이스를 선택할 것인가
- 어떤 데이터베이스를 공부할 것인가 에 관한 가이드

고려사항
1) 직장, 동료들이 사용하고 있는 데이터베이스
2) 정해지지 않은 상황이라면,,,-> 통계를 기반으로!
ex) database ranking 2018 로 search

* 관계형 데이터베이스 중 하나 공부하고
* 관계형 데이터베이스가 아닌 것도 공부하면 좋다
* Relational DBMS, Document store(ex. MongoDB)

오라클 : 절대 강자, 관공서, 기업, 금융데이터 다루는 곳
-> 자금이 여유로운 경우
MySQL : 무료, 오픈소스 / 
개인, 작은 회사, sns와 같이 대규모의데이터가 생성되지만 데이터의 신뢰성이 아주 중요하지는 않을 때
-> 초심자용

MongoDB
데이터베이스 모델 : Document store(중요x, 관계형 데이터베이스가 아닌 것이 중요)


1960s
파일한계 극복 시도들이 등장
누구나 쉽게 데이터를 정리할 수 있는 전문적인 소프트웨어를 고안하기 시작
: DATABASE라고 부르기 시작

1970s
Relational database를 고안

데이터베이스는 데이터를
표의 형태로 정리가능, 정렬 검색 등을 빠르고 편리, 안전하게 할 수 있음

1994
스웨덴 MySQL 무료 오픈소스 관계형 데이터베이스의 핵심기능을 거의 가지고 있음
웹개발자들이 많이 사용함
웹과 함께 폭발적인 동반성장을 이룸

DATABASE2 MYSQL -2 데이터베이스의 목적

데이터베이스는 컴퓨터 언어, 코딩을 통해서 제어할 수 있다!
사람과 대화하듯,
for example...
데이터베이스야, 토픽이라는 표에 있는 데이터 중에서 author에서 egoing 인 부분 데이터들만 보여줘
SELECT * FROM topic WHERE author = 'egoing';

egoing 중에서 인덱스 기준으로 큰 숫자가 먼저 나오게(내림차순) 정렬해서 보여줘
SELECT * FROM topic WHERE author = 'egoing' ORDER BY id DESC;

데이터베이스를 구축하면 
데이터베이스에 저장된 데이터를 웹 또는 앱을 통해서 공유할 수 있다
또는 빅데이터, 인공지능으로 분석할 수 있다












