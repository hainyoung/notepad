0623 day32

이상치 처리를 알아보자
이상치는 
1) 삭제 를 할 수도 있고
2) NAN으로 처리하여 보간법 또는 fillna(ffill, bfill, mean())로 채워줄 수 있다

많은 양의 데이터에서 이상치를 어떻게 찾을 수 있을까?
IQR을 이용해서 이상치를 탐지할 수 있다

IQR을 이용하여 이상치 탐지할 수 있는 함수 정의

def outliers(data_out) :
    quartile_1, quartile_3 = np.percentile(data_out, [25, 75])
    print("1사분위 :", quartile_1)
    print("3사분위 :", quartile_3)
    iqr = quartile_3 - quartile_1
    lower_bound = quartile_1 - (iqr * 1.5)
    upper_bound = quartile_3 + (iqr * 1.5)
    return np.where((data_out>upper_bound) | (data_out<lower_bound))

이 함수는 재사용이 가능하긴 하지만 컬럼이 여러 개인 데이터는 불가능
for문을 이용해서 함수를 만들면  
컬럼이 여러 개인 데이터에서 컬럼 별로 이상치를 탐지할 수 있다

# dataset이 numpy 형태일 때
def outliers(data_out):
    outliers = []
    for i in range(data_out.shape[1]):
        data = data_out[:, i] 
        quartile_1, quartile_3 = np.percentile(data, [25, 75]) 
        print("1사분위 : ",quartile_1)                                       
        print("3사분위 : ",quartile_3)                                        
        iqr = quartile_3 - quartile_1
        lower_bound = quartile_1 - (iqr * 1.5)
        upper_bound = quartile_3 + (iqr * 1.5)
        out = np.where((data_out > upper_bound) | (data_out < lower_bound))
        outliers.append(out)
    return outliers


# dataset이 pandas 형태일 때
def outliers(data_out):
    quartile_1 = data_out.quantile(.25)
    quartile_3 = data_out.quantile(.75)
    print("1사분위 : ",quartile_1)                                       
    print("3사분위 : ",quartile_3)                                        
    iqr = quartile_3 - quartile_1
    lower_bound = quartile_1 - (iqr * 1.5)
    upper_bound = quartile_3 + (iqr * 1.5)
    return np.where((data_out > upper_bound) | (data_out < lower_bound))