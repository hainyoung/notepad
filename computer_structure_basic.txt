01장 02. 컴퓨터 구조 소개

# Computer의 핵심 부분


	연산장치      MEMORY(정보 information 혹은 자료 data를 저장할 수 있는 공간)
	   |		|
	 <CPU>   +    <RAM>	------- 컴퓨터
		        +
		    <HDD,SSD>	------- 주변기기(있어도o, 없어도o)

- CPU의 대표 회사 : Intel, AMD 등 ('X86 호환 프로세서'라고도 함)
- RAM의 대표 회사 : 삼성전자 등

- CPU는 연산장치. Machine, 기계라고도 함.
- 참고로 virtual machine이란 기계가 진짜로 있는 게 아니라 진짜 기계처럼 작동을 하는
  Software 형태의 개념적인 기계.
- CPU, 즉 machine은 제조사마다 생김새가 다 다르고 굉장히 복잡함.
- machine을 작동시키면 코드(Code)가 등장.
- '세탁기'라는 기계를 돌려도 코드가 있음.
- CPU를 움직이게 하는 코드는 기계를 작동시키는 명령이다.
- 이를 가리켜 'Machine code'라고 함.
- 명령코드는 체계가 있는데 그 예가 C언어(프로그래밍언어)이다.
- C언어로 작성하는 코드는 사람을 위한 코드.
- 따라서 기계에 맞춰 알려줘야한다. 즉, 번역이 필요함.
- 사람을 위한 코드를 기계가 알 수 있는 코드로 변환을 해 주는 것 : 번역기
- 번역기가 알아서 하므로 우리는 C언어만 잘 하면 된다.
- Program(P/g) 제작 할 때 중요한 것은 기계가 무엇이든 프로그램이 돌아가야한다는 것.
- 어떤 제조사에서 만든 것이든 뭐가 됐든 상관없어야 함.
- 이를 가리켜 "기계에 대해서 해당 프로그램이 '의존성'이 없다"고 말하는데 '의존성'은 앞으로 매우 중요한 단어.

- RAM과 HDD(or SSD)는 Memory에 해당.
- RAM은 Memory 중 Main.
- Main Memory를 사용하는 방법에는 변수, 동적할당(해제)가 있음.
- HDD(or SSD)는 Secondary Memory, 보조 메모리인데 File System 형식으로 관리 된다.
- File System을 다루는 방법 중 가장 쉬운 것이 File I.O, 파일 입출력이다.
- 요즘은 RAM, HDD(or SSD)를 구별 않고 하나의 '논리적'인 메모리라고 말함.
- virtual memory(가상 메모리) 시스템을 모든 운영체제에서 사용하고 있기 때문.
- 그래서 RAM과 HDD(or SSD)를 굳이 구분할 필요가 없음.


# 번역

사람	<C / C++ / JAVA / C# ...>	----- High Level Language(고수준언어, 고급어)


	<번역(번역기)>			----- Compiler, Interpreter


기계	<Assembly Language>		----- Low Level Language(저수준언어, 저급어)
	<Code>				----- Low Level Language
수준	<CPU(Machine)>


- 예를 들어, 사람이 C언어를 작성하면 번역(번역기)을 통해 기계가 알아 먹을 수 있는 코드로 변환 됨.
- C언어의 Compiler로 대표적인 것은 MS Visual Studio.
- 번역기는 Compiler, Interpreter로 나눠 볼 수 있음.
- Compiler는 쉽게 말해 '진짜 번역'이라고 보면 됨.
- 우리가 사용하는 말로 변역된 책이 있다면 굳이 원서를 볼 필요가 없음.
- 프로그램을 개떡같이 짜도 번역기가 알아서 찰떡같이 CPU에 전달하는 것을 '최적화, Optimization'이라고 함.
- 번역기는 최적화가 가능함.
- 이에 반해 Interpreter은 번역 보다는 '동시 통역'에 가까움.
- 작성, 번역, 식행이 한 번에 일어나기 때문에 '최적화'가 일어나기 힘듦.
- Interpreter로 대표적인 것은 JavaScript가 있음.


# Memory 계층 구조

---
|		(Register)
CPU	   -----(Layer 1      )
|	   Cache(Layer 2         )
|	   -----(Layer 3            )
---
---
|
Memory	    Main(RAM                     )
|
---    Secondary(HDD/SSD                                       )
		 ->보조기억장치


- Memory의 계층은 위와 같은 구조이다.
- 비유를 하면, 가장 아래 쪽에 위치한 HDD/SSD는 많은 양의 책을 보유한 도서관.
- RAM은 어느 정도의 책들이 꽂혀진 책장.
- Layer들로 이뤄진 Cache는 보려는 책 몇 권들을 올려놓은 책상.
- Register은 현재 보는 책
- Register은 최종적 연산이 이뤄지는 곳이다.
- 아래쪽에서 위로 올라갈수록 정보의 양은 적어지고 속도는 빨라짐.
- CPU와 RAM 사이에서 정보들이 수도 없이 왔다 갔다함.
- 따라서 CPU는 RAM을 '관리'하는데 어떻게 하느냐?
- 여러 이론들이 등장함. RAM '관리'는 매우 중요함.


# 운영체제란

- 운영체제에는 Windows OS, Linux, UNIX, IOS 등이 있다.

		- P/g(Program)  n개
Software-------|
		- 운영체제      1개  -		
				      |-------Platform
		  H/W(Hardware)  1개 -
		  ->CPU, RAM...

- 운영체제는 정부, 프로그램은 개인이라고 생각하면 됨.
- 정부는 개인의 자유도 보장하지만 법적으로 제한, 관리하기도 함.
- 운영체제는 프로그램이 돌아가는 것을 보장, 관리함.


























