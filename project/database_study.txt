# 생활코딩
# DATABASE 1

# 1-1
정보기술의 심장 : 데이터베이스
데이터가 중요한 이유
이 데이터를 가공해서 다양한 일을 할 수 있기 때문
인터넷과 연결된 웹과 앱을 통해 소식과지식을 전파 가능
빅데이터 인공지능 기술 이용해서 대규모의 데이터로부터
통찰력 있는 분석결과를 뽑아낼 수 있다

이런 일을 하기 위해 데이터를 저장하고 꺼낼 수 있어야 한다

우리가 선택할 수 있는 첫 번째 수단 : 파일
장점 모두 열거하기 힘듦
배우기 쉽고 운영체제마다 파일 기능을 제공하기 때문에 어디에서든 사용가능
이메일, 메신저를 통해서 간편하게 전송할 수도 있다

그러나
파일이 만능은 아니다
성능이나 보안, 편의성에 한계를 가지고 있다
파일의 한계를 극복, 보완하기 위해
전문화된 소프트웨어 : 데이터베이스

데이터베이스를 이용하면 소중한 데이터를
안전하고 편리하고 빠르게 보관하고 사용할 수 있다
다양한 데이터베이스 제품들이 존재
mysql oracle sqlserver postgressql mongodb

# 1-2
데이터베이스의 본질
input, output
어떻게 입력하고 어떻게 출력하는지 따져야 한다
데이터베이스의 반을 한다고 해도 과언이 아님

input은 3가지 작업으로 쪼개진다
create, update, delete (생성, 수정, 삭제)
output : read(읽음)

데이터베이스의 가장 핵심적인 작업
-> CRUD(생성하고 읽고 수정, 삭제)

# 1-3
spreadsheet : database의 특성을 어느 정도 가지고는 있음

file > spreadsheet > database

# 1-4
- 어떤 데이터베이스를 선택할 것인가
- 어떤 데이터베이스를 공부할 것인가 에 관한 가이드

고려사항
1) 직장, 동료들이 사용하고 있는 데이터베이스
2) 정해지지 않은 상황이라면,,,-> 통계를 기반으로!
ex) database ranking 2018 로 search

* 관계형 데이터베이스 중 하나 공부하고
* 관계형 데이터베이스가 아닌 것도 공부하면 좋다
* Relational DBMS, Document store(ex. MongoDB)

오라클 : 절대 강자, 관공서, 기업, 금융데이터 다루는 곳
-> 자금이 여유로운 경우
MySQL : 무료, 오픈소스 / 
개인, 작은 회사, sns와 같이 대규모의데이터가 생성되지만 데이터의 신뢰성이 아주 중요하지는 않을 때
-> 초심자용

MongoDB
데이터베이스 모델 : Document store(중요x, 관계형 데이터베이스가 아닌 것이 중요)


1960s
파일한계 극복 시도들이 등장
누구나 쉽게 데이터를 정리할 수 있는 전문적인 소프트웨어를 고안하기 시작
: DATABASE라고 부르기 시작

1970s
Relational database를 고안

데이터베이스는 데이터를
표의 형태로 정리가능, 정렬 검색 등을 빠르고 편리, 안전하게 할 수 있음

1994
스웨덴 MySQL 무료 오픈소스 관계형 데이터베이스의 핵심기능을 거의 가지고 있음
웹개발자들이 많이 사용함
웹과 함께 폭발적인 동반성장을 이룸

# DATABASE2 MYSQL -2 데이터베이스의 목적

데이터베이스는 컴퓨터 언어, 코딩을 통해서 제어할 수 있다!
사람과 대화하듯,
for example...
데이터베이스야, 토픽이라는 표에 있는 데이터 중에서 author에서 egoing 인 부분 데이터들만 보여줘
SELECT * FROM topic WHERE author = 'egoing';

egoing 중에서 인덱스 기준으로 큰 숫자가 먼저 나오게(내림차순) 정렬해서 보여줘
SELECT * FROM topic WHERE author = 'egoing' ORDER BY id DESC;

데이터베이스를 구축하면 
데이터베이스에 저장된 데이터를 웹 또는 앱을 통해서 공유할 수 있다
또는 빅데이터, 인공지능으로 분석할 수 있다

# 3.0 MySQL 설치

# 3.1 MySQL 설치(Windows)

* 공식 홈페이지에서 설치
하는 절차
- 구글 : mysql community edition download
- 첫번째 페이지 들어가서 download mysql community edition 클릭
- mysql community server 클릭
- 운영체제 맞는 것 선택하고 가장 상단의 download 선택해서 다운 받기

* 조금 더 쉽게 설치하는 방법
bitnami wamp 구글 서치
첫번째 사이트 링크 타고 -> windows 용 다운받기
최신 버전 다운받았는데 잘 안 돼서
7.3.2 로 다운 받음

password : 123456
apache web server Port 81
SSL Port 444
MySQL Server port 3307


cmd 창에서 Bitnami\wampstack-7.3.20-0\mysql\bin로 들어가서

mysql -uroot -p 입력
패스워드 입력

welcome 어쩌구 뜸

mysql> 여기서 작업하게 된다


#4. MySQL 구조

3개 정도의 구조가 있다

#################
정보가 표의 형태로 담겨져 있다

웹사이트를 운영한느데 사용하는 데이터를 데이터베이스에 저장한다 했을 때
글들을 저장하는 표, 댓글, 회원정보 등을 저장하는 표...
수많은 표들이 생성된다 -> 정리정돈할 필요성이 생긴다
파일에서 디렉토리와 같은 것의 필요성이 대두되는 것과 비슷한 상황

mysql에서는 연관된 표들을 그룹핑함으로써
연관되지 않은 표들과는 분리시키는...
파일의 폴더 같은 것들이 있는데 그것이 바로 데이터베이스

우리가 배우는 것이 데이터ㅔ이스인데
표들을 그룹핑한 것이 데이터베이스라하면 헷갈릴 수도...
mysql에서는 데이터베이스라는 표현과 함께 '스키마'라는 표현을 쓴다

'스키마' == 표들을 서로 그룹핑 할 때 쓰는 일종의 폴더

'스키마'들이 많아지면 그것들도 저장이 되어야 하는데 그것을 '데이터베이스 서버'라고 한다

mysql 설치 == 데이터베이스 서버 프로그램을 설치한 것
그 프로그램의 기능성을 사용해서 데이터와 관련된 여러 작업들을 하는 것

표 < 데이터베이스(스키마) < 데이터베이스 서버


# 5. 서버접속
데이터베이스는 자체적으로 보안 체계가 있다
그래서 안전하게 데이터를 보관할 수 있다
권한기능도 있어서 mysql에 여러 사람을 등록할 수 있다

uroot : u == user, 기본 유저 == 관리자, 모든 권한을 가지고 있음
중요한 시스템이라면 별도의 사용자를 만들어서 그 사용자로 작업하다가
중요한 작업을 할 때 root로 들어가라

#7.
sql structured query language 컴퓨터 언어

structured : 구조화되었다(관계형 데이터베이스가 기본적으로 표의 형식으로 정보를 정리정돈함,
표를 작성하는 것, 정리정돈하는 것 == 구조화되었다)
쿼리 : 데이터베이스에게 데이터를 넣어라, 읽어라, 수정, 삭제해라, 스키마를 만들어라 등의 요청, 질의
language : 데이터베이스도, 나도 이해할 수 있는 공통의 약속에 따라 mysql server에게 요청해야만
알아들을 수 있다, 그 때 사용하는 언어가 sql이다

sql의 두 가지 특징
1) 쉽고
2) 중요하다
관계형 데이터베이스 카테고리에 속하는 제품들이 공통적으로
데이터베이스 서버를 제어할 때 사용하는 언어가 sql이다, 표준화까지 되어 있다
다수 관계형 데이터베이스 시스템이 sql을 통해서 동작한다

표 : table
x축 : row, record, 행
y축 : column, 열




# 18. 인터넷과 데이터베이스

database server
server, 서버의 의미?

인터넷을 바탕으로

정보를 요청하는 쪽 - 응답하는 쪽
요청 : client(서비스를 요청하는) / 갑
응답 : server(서비스를 제공하는) / 을

client computer는
server computer에게 정보를 요청하는데, 이 관계가 웹이라면
web client(==web browser)
web server

만약, 게임이라면
game client
game server...

client - server는 internet을 이해하는 핵심적인 열쇠

mysql은 두 개의 프로그램을 동시에 설치해준다
1) database client
2) database server

database server에는 실제로 데이터가 저장이 되고
1)을 통해서 2)에 접속을 할 수 있다

우리는 2)를 직접 다룰 수 없다
어떠한 형태로건 1)을 거쳐서 다룬다







